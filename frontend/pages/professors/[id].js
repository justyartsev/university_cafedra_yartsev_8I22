import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { useRouter } from 'next/router';

const ProfessorDetail = () => {
  const router = useRouter();
  const { id } = router.query;
  const [professor, setProfessor] = useState(null);
  const [disciplines, setDisciplines] = useState([]);
  const [showForm, setShowForm] = useState(false);
  const [selectedDiscipline, setSelectedDiscipline] = useState('');
  const [teachingTypes, setTeachingTypes] = useState({
    '–õ–µ–∫—Ü–∏–∏': false,
    '–ü—Ä–∞–∫—Ç–∏–∫–∏': false,
    '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ': false,
  });

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –ª–∏ id –∏ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω —Å—Ç—Ä–æ–∫–æ–π
    if (id && typeof id === 'string') {
      const fetchProfessor = async () => {
        try {
          const response = await axios.get(`http://localhost:8000/api/professors/${id}/`);
          console.log('–î–∞–Ω–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:', response.data);
          setProfessor(response.data);
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:', error);
          if (error.response && error.response.status === 404) {
            alert('–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
            router.push('/'); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ 404
          }
        }
      };
      fetchProfessor();
    } else {
      console.warn('ID –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
      router.push('/'); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    }
  }, [id, router]);

  useEffect(() => {
    const fetchDisciplines = async () => {
      try {
        const response = await axios.get(`http://localhost:8000/api/disciplines/`);
        setDisciplines(response.data);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω:', error);
      }
    };
    fetchDisciplines();
  }, []);

  if (!professor) return <div className="p-4">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω –ø–æ —Ç–∏–ø–∞–º —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç undefined
  const existingDisciplines = professor.disciplines || [];
  const lectures = existingDisciplines.filter(d => d.teaching_type_detail?.name === '–õ–µ–∫—Ü–∏–∏');
  const practices = existingDisciplines.filter(d => d.teaching_type_detail?.name === '–ü—Ä–∞–∫—Ç–∏–∫–∏');
  const labs = existingDisciplines.filter(d => d.teaching_type_detail?.name === '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ');

  const navigateTo = (path) => {
    router.push(path);
  };

  const isActive = (path) => router.pathname === path || (path === '/' && router.pathname === '/professors/[id]');

  const handleRemoveDiscipline = async (professorDisciplineId) => {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä–µ–ø–∏—Ç—å –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É –æ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è?')) {
      try {
        await axios.delete(`http://localhost:8000/api/professor-disciplines/${professorDisciplineId}/`);
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
        const response = await axios.get(`http://localhost:8000/api/professors/${id}/`);
        console.log('–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:', response.data);
        setProfessor(response.data);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä–µ–ø–∏—Ç—å –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É');
      }
    }
  };

  const handleRemoveProfessor = async () => {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!')) {
      try {
        await axios.delete(`http://localhost:8000/api/professors/${id}/`);
        alert('–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
        router.push('/'); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è');
      }
    }
  };

  const handleTeachingTypeChange = (type) => {
    setTeachingTypes((prev) => ({
      ...prev,
      [type]: !prev[type],
    }));
  };

  const handleAddDiscipline = async (e) => {
    e.preventDefault();
    if (!selectedDiscipline || !Object.values(teachingTypes).some((checked) => checked)) {
      alert('–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É –∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–∏–ø –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è');
      return;
    }

    try {
      const teachingTypeResponse = await axios.get(`http://localhost:8000/api/teaching-types/`);
      console.log('–¢–∏–ø—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è:', teachingTypeResponse.data);
      const teachingTypeMap = {
        '–õ–µ–∫—Ü–∏–∏': teachingTypeResponse.data.find((tt) => tt.name === '–õ–µ–∫—Ü–∏–∏')?.id,
        '–ü—Ä–∞–∫—Ç–∏–∫–∏': teachingTypeResponse.data.find((tt) => tt.name === '–ü—Ä–∞–∫—Ç–∏–∫–∏')?.id,
        '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ': teachingTypeResponse.data.find((tt) => tt.name === '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ')?.id,
      };
      console.log('teachingTypeMap:', teachingTypeMap);

      const promises = Object.entries(teachingTypes)
        .filter(([_, checked]) => checked)
        .map(([type]) => {
          const teachingTypeId = teachingTypeMap[type];
          if (!teachingTypeId) {
            throw new Error(`–¢–∏–ø –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è "${type}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
          }
          console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:', {
            professor: parseInt(id),
            discipline: parseInt(selectedDiscipline),
            teaching_type: teachingTypeId,
          });
          return axios.post(`http://localhost:8000/api/professor-disciplines/`, {
            professor: parseInt(id),
            discipline: parseInt(selectedDiscipline),
            teaching_type: teachingTypeId,
          }, {
            headers: { 'Content-Type': 'application/json' }
          });
        });

      await Promise.all(promises);
      setShowForm(false);
      setSelectedDiscipline('');
      setTeachingTypes({ '–õ–µ–∫—Ü–∏–∏': false, '–ü—Ä–∞–∫—Ç–∏–∫–∏': false, '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ': false });
      const response = await axios.get(`http://localhost:8000/api/professors/${id}/`);
      console.log('–î–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:', response.data);
      setProfessor(response.data);
      alert('–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã:', error);
      if (error.response) {
        console.error('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.data);
      }
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É');
    }
  };

  return (
    <div className="min-h-screen bg-gray-100">
      {/* –ü–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      <nav className="bg-black text-white p-4 flex justify-between items-center">
        <div className="space-x-4">
          <span
            className={`hover:underline cursor-pointer ${isActive('/') ? 'border-b-2 border-green-500' : ''}`}
            onClick={() => navigateTo('/')}
          >
            –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏
          </span>
          <span
            className={`hover:underline cursor-pointer ${isActive('/disciplines') ? 'border-b-2 border-green-500' : ''}`}
            onClick={() => navigateTo('/disciplines')}
          >
            –î–∏—Å—Ü–∏–ø–ª–∏–Ω—ã
          </span>
          <span
            className={`hover:underline cursor-pointer ${isActive('/references') ? 'border-b-2 border-green-500' : ''}`}
            onClick={() => navigateTo('/references')}
          >
            –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏
          </span>
        </div>
        <div className="relative">
          <input
            type="text"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ"
            className="p-2 rounded border border-gray-300"
          />
          <span className="absolute right-2 top-2 text-gray-500">üîç</span>
        </div>
      </nav>

      {/* –î–µ—Ç–∞–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è */}
      <div className="p-4 max-w-4xl mx-auto">
        <div className="bg-white text-gray-800 rounded-lg shadow p-6">
          <h1 className="text-2xl text-gray-800 font-bold mb-4">{professor.last_name} {professor.first_name} {professor.third_name || ''}</h1>
          <div className="flex items-center">
            <img src="https://via.placeholder.com/100" alt="Avatar" className="mr-6" />
            <div>
              <h2 className="text-lg font-semibold text-green-600">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
              <p>–£—á–µ–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å: {professor.degree ? professor.degree.name : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</p>
              <p>–î–æ–ª–∂–Ω–æ—Å—Ç—å: {professor.position ? professor.position.name : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</p>
              <p>–ö–∞–±–∏–Ω–µ—Ç: {professor.office ? professor.office.number : '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
              <p>–°—Ç–∞–≤–∫–∞: {professor.work_time ? professor.work_time.name : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</p>
              <p>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {new Date(professor.birth_date).toLocaleDateString()}</p>
              <p>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {professor.phone_number}</p>
              <p>–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: {professor.email}</p>
            </div>
          </div>
          <div className="mt-4 flex space-x-2">
            <button className="bg-green-500 text-white p-2 rounded hover:bg-green-600">–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é</button>
            <button
              className="bg-red-500 text-white p-2 rounded hover:bg-red-600 cursor-pointer"
              onClick={handleRemoveProfessor}
            >
              –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
            </button>
          </div>
        </div>

        {/* –î–∏—Å—Ü–∏–ø–ª–∏–Ω—ã */}
        <div className="bg-white text-gray-800 rounded-lg shadow p-6 mt-4">
          <h2 className="text-lg font-semibold text-green-600">–î–∏—Å—Ü–∏–ø–ª–∏–Ω—ã</h2>
          <div className="space-y-4">
            <div>
              <h3 className="text-black font-bold">–õ–µ–∫—Ü–∏–∏</h3>
              <ul>
                {lectures.length > 0 ? (
                  lectures.map((item) => (
                    <li key={item.id} className="border-b py-2 flex justify-between">
                      <span 
                        className="hover:text-green-600 cursor-pointer"
                        onClick={() => router.push(`/disciplines/${item.discipline_detail.id}`)}
                      >
                        {item.discipline_detail.name}
                      </span>
                      <button 
                        onClick={() => handleRemoveDiscipline(item.id)}
                        className="text-red-500 hover:text-red-700 cursor-pointer"
                      >
                        –£–¥–∞–ª–∏—Ç—å
                      </button>
                    </li>
                  ))
                ) : (
                  <li>–ù–µ—Ç –ª–µ–∫—Ü–∏–π</li>
                )}
              </ul>
            </div>
            <div>
              <h3 className="text-black font-bold">–ü—Ä–∞–∫—Ç–∏–∫–∏</h3>
              <ul>
                {practices.length > 0 ? (
                  practices.map((item) => (
                    <li key={item.id} className="border-b py-2 flex justify-between">
                      <span 
                        className="hover:text-green-600 cursor-pointer"
                        onClick={() => router.push(`/disciplines/${item.discipline_detail.id}`)}
                      >
                        {item.discipline_detail.name}
                      </span>
                      <button 
                        onClick={() => handleRemoveDiscipline(item.id)}
                        className="text-red-500 hover:text-red-700 cursor-pointer"
                      >
                        –£–¥–∞–ª–∏—Ç—å
                      </button>
                    </li>
                  ))
                ) : (
                  <li>–ù–µ—Ç –ø—Ä–∞–∫—Ç–∏–∫</li>
                )}
              </ul>
            </div>
            <div>
              <h3 className="text-black font-bold">–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ</h3>
              <ul>
                {labs.length > 0 ? (
                  labs.map((item) => (
                    <li key={item.id} className="border-b py-2 flex justify-between">
                      <span 
                        className="hover:text-green-600 cursor-pointer"
                        onClick={() => router.push(`/disciplines/${item.discipline_detail.id}`)}
                      >
                        {item.discipline_detail.name}
                      </span>
                      <button 
                        onClick={() => handleRemoveDiscipline(item.id)}
                        className="text-red-500 hover:text-red-700 cursor-pointer"
                      >
                        –£–¥–∞–ª–∏—Ç—å
                      </button>
                    </li>
                  ))
                ) : (
                  <li>–ù–µ—Ç –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö</li>
                )}
              </ul>
            </div>
          </div>
          <button
            className="bg-green-500 text-white p-2 rounded mt-2 hover:bg-green-600 cursor-pointer"
            onClick={() => setShowForm(true)}
          >
            –î–æ–±–∞–≤–∏—Ç—å –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É...
          </button>

          {showForm && (
            <div className="mt-4 p-4 border rounded-lg bg-gray-50 ">
              <h2 className="text-lg font-semibold mb-2">–î–æ–±–∞–≤–∏—Ç—å –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É</h2>
              <form onSubmit={handleAddDiscipline}>
                <div className="mb-4">
                  <label className="block text-sm font-medium text-gray-700">–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞</label>
                  <select
                    value={selectedDiscipline}
                    onChange={(e) => setSelectedDiscipline(e.target.value)}
                    className="mt-1 p-2 w-full border rounded cursor-pointer"
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É</option>
                    {disciplines.map((disc) => (
                      <option key={disc.id} value={disc.id}>
                        {disc.name}
                      </option>
                    ))}
                  </select>
                </div>
                <div className="mb-4">
                  <label className="block text-sm font-medium text-gray-700">–¢–∏–ø –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è</label>
                  {['–õ–µ–∫—Ü–∏–∏', '–ü—Ä–∞–∫—Ç–∏–∫–∏', '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ'].map((type) => (
                    <div key={type} className="flex items-center">
                      <input
                        type="checkbox"
                        checked={teachingTypes[type]}
                        onChange={() => handleTeachingTypeChange(type)}
                        className="mr-2"
                      />
                      <label>{type}</label>
                    </div>
                  ))}
                </div>
                <div className="flex space-x-2">
                  <button
                    type="submit"
                    className="bg-green-500 text-white p-2 rounded hover:bg-green-600 cursor-pointer"
                  >
                    –î–æ–±–∞–≤–∏—Ç—å
                  </button>
                  <button
                    type="button"
                    onClick={() => setShowForm(false)}
                    className="bg-gray-500 text-white p-2 rounded hover:bg-gray-600 cursor-pointer"
                  >
                    –û—Ç–º–µ–Ω–∞
                  </button>
                </div>
              </form>
            </div>
          )}
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ */}
        <div className="bg-white text-gray-800 rounded-lg shadow p-6 mt-4">
          <h2 className="text-lg font-semibold text-green-600">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h2>
          {professor.activities && professor.activities.length > 0 ? (
            professor.activities.map((item) => (
              <div key={item.id} className="border-b py-2">
                <h3 className="text-black font-bold">{item.activity.name}</h3>
                <p>{item.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}</p>
              </div>
            ))
          ) : (
            <p>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π</p>
          )}
          <button className="bg-green-500 text-white p-2 rounded mt-2 hover:bg-green-600">–î–æ–±–∞–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å...</button>
        </div>
        
      </div>
    </div>
  );
};

export default ProfessorDetail;