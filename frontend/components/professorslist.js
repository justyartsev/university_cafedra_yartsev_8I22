import React, { useState, useEffect } from 'react';
import axios from 'axios';
import AddProfessor from './addprofessor';
import { useRouter } from 'next/router';

const ProfessorList = () => {
  const router = useRouter();
  const [professors, setProfessors] = useState([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [showAddForm, setShowAddForm] = useState(false);
  const [error, setError] = useState(null);

  const fetchProfessors = async () => {
    try {
      const response = await axios.get('http://localhost:8000/api/professors/');
      setProfessors(response.data);
      setError(null);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π:', error);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π. –ü—Ä–æ–≤–µ—Ä—å —Å–µ—Ä–≤–µ—Ä.');
    }
  };

  useEffect(() => {
    fetchProfessors();
  }, []);

  const filteredProfessors = professors.filter(professor =>
    `${professor.first_name} ${professor.last_name} ${professor.third_name || ''}`.toLowerCase().includes(searchTerm.toLowerCase())
  );

  const navigateTo = (path) => {
    router.push(path);
  };

  const isActive = (path) => router.pathname === path;

  const handleAddSuccess = () => {
    fetchProfessors(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    setShowAddForm(false);
  };

  return (
    <div className="min-h-screen bg-gray-200">
      {/* –ü–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      <nav className="bg-black text-white p-4 flex justify-between items-center">
        <div className="space-x-4">
          <span
            className={`hover:underline cursor-pointer ${isActive('/') ? 'border-b-2 border-green-500' : ''}`}
            onClick={() => navigateTo('/')}
          >
            –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏
          </span>
          <span
            className={`hover:underline cursor-pointer ${isActive('/disciplines') ? 'border-b-2 border-green-500' : ''}`}
            onClick={() => navigateTo('/disciplines')}
          >
            –î–∏—Å—Ü–∏–ø–ª–∏–Ω—ã
          </span>
          <span
            className={`hover:underline cursor-pointer ${isActive('/references') ? 'border-b-2 border-green-500' : ''}`}
            onClick={() => navigateTo('/references')}
          >
            –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏
          </span>
        </div>
        <div className="relative">
          <input
            type="text"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ"
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="p-2 rounded border border-gray-300"
          />
          <span className="absolute right-2 top-2 text-gray-500">üîç</span>
        </div>
      </nav>

      {/* –°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π */}
      <div className="p-4">
        {error && <p className="text-red-500 mb-4">{error}</p>}
        <div className="text-black flex justify-between items-center mb-4">
          <div>
            –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞: {filteredProfessors.length}
            <select className="ml-4 p-2 border rounded cursor-pointer">
              <option>–í—ã–±–µ—Ä–∏—Ç–µ</option>
              <option>–í—ã–±–µ—Ä–∏—Ç–µ</option>
            </select>
          </div>
          <button
            onClick={() => setShowAddForm(true)}
            className="bg-green-500 text-white p-2 rounded hover:bg-green-600 cursor-pointer"
          >
            –î–æ–±–∞–≤–∏—Ç—å
          </button>
        </div>

        {filteredProfessors.map((professor) => (
          <div
            key={professor.id}
            className="bg-white text-gray-700 p-4 mb-4 rounded-lg shadow flex items-center hover:bg-[#55A376] cursor-pointer"
            onClick={() => router.push(`/professors/${professor.id}`)}
          >
            <img src="https://via.placeholder.com/50" alt="Avatar" className="mr-4" />
            <div>
              <h3 className="text-lg font-bold text-[#0F9244]">
                {professor.last_name} {professor.first_name} {professor.third_name || ''}
              </h3>
              <p>–î–æ–ª–∂–Ω–æ—Å—Ç—å: {professor.position?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</p>
              <p>–ö–∞–±–∏–Ω–µ—Ç: {professor.office?.number || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
              <p>–°—Ç–∞–≤–∫–∞: {professor.work_time?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</p>
            </div>
          </div>
        ))}

        {showAddForm && (
          <div className="fixed inset-0 bg-gray-500 bg-opacity-50 flex items-center justify-center">
            <div className="bg-white p-4 rounded-lg w-1/2">
              <AddProfessor onClose={() => setShowAddForm(false)} onSuccess={handleAddSuccess} />
              <button
                onClick={() => setShowAddForm(false)}
                className="mt-4 bg-red-500 text-white p-2 rounded hover:bg-red-600"
              >
                –ó–∞–∫—Ä—ã—Ç—å
              </button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default ProfessorList;